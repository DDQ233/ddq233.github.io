<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IOT on DDQ的笔记</title>
    <link>https://ddq233.github.io/tags/iot/</link>
    <description>Recent content in IOT on DDQ的笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2019 - 2020 DDQ.</copyright>
    <lastBuildDate>Sat, 04 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ddq233.github.io/tags/iot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>物联网网关与工程实训课程设计总结</title>
      <link>https://ddq233.github.io/summary/iot_curridulum_design_summary/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ddq233.github.io/summary/iot_curridulum_design_summary/</guid>
      <description>一、课程设计要求 总体设计参考：
网关部分要求：
 使用 Linux 实现一个简易的物联网网关。（Linux 使用 WSL 或者 VMware虚拟机） 能够从串口接收数据，终端节点可选择实物硬件、Proteus仿真、PC机上的串口调试助手。 能够把串口接收的传感器数据保存到 MySql 数据库。 能够把串口接收的传感器数据通过网络（TCP、UDP、MQTT等协议）发送给客户端。 能够从网络（TCP、UDP、MQTT等协议）中接收数据指令并通过串口发送到终端节点驱动外设（LED灯、电机等）的工作。 能够运用多线程的知识，从终端节点上行的数据处理在主线程中运行，下行的数据处理在子线程中运行。   二、题目与主题 课程设计目的： 通过简易物联网网关的实现让学生把Linux串口编程、网络编程、数据库编程、mqtt编程、多线程编程应用于实践。
课设网关代码：
 GitHub 链接 - CDGateway目录 Gitee 链接 - CDGateway目录   三、课程设计介绍 1. 设备选型：
 底层硬件  Proteus仿真 Arduino单片机作为MCU DHT11温湿度传感器 LN298电机驱动器 电机   中间层  VMware 虚拟机软件 Ubuntu 20.04 64位 Linux 操作系统   上层应用  JavaWeb 项目    2. 系统架构：
3. 工作流程</description>
    </item>
    
    <item>
      <title>物联网系统传感层的设计</title>
      <link>https://ddq233.github.io/notes/iot_sensing_layer_design/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ddq233.github.io/notes/iot_sensing_layer_design/</guid>
      <description>应用场景  智能家居   可行性分析  现状 存在问题   需求分析  体验  舒适 安全 可靠     角色分析  老人 小孩 管理者 物业   功能设计  温度自动调控 识别 语音控制   硬件架构  红外遥控 几点起 温度传感器 空气质量监测 MCU   执行标准  国际 UL、CE 行业标准 企业标准 双方约定   硬件选型  单片机STM32 温度监测传感器 空气质量传感器 识别、控制 红外传感器 继电器 电机    对传感器对一般要求：</description>
    </item>
    
  </channel>
</rss>